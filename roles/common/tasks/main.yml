---
- name: Check OS distribution
  ansible.builtin.setup:
    filter: ansible_distribution
  tags:
    - common
    - check_os

- name: Get hostname
  shell: hostname
  register: current_hostname_raw
  tags:
    - common
    - get_hostname

- name: Strip newline from current hostname
  set_fact:
    current_hostname: "{{ current_hostname_raw.stdout | trim }}"
  tags:
    - common
    - get_hostname

- name: Check Docker version
  shell: docker --version | awk '{print $3}'
  register: docker_version_output
  when: inventory_hostname == 'server1'
  tags: 
    - pre_requisite
    - docker_version

- name: Parse Docker version
  set_fact:
    docker_version: "{{ docker_version_output.stdout }}"
  when: inventory_hostname == 'server1'
  tags:
    - pre_requisite
    - docker_version

- name: Check Docker Compose version
  shell: docker-compose --version | awk '{print $3}'
  register: docker_compose_version_output
  when: inventory_hostname == 'server1'
  tags:
    - pre_requisite
    - docker_compose_version

- name: Parse Docker Compose version
  set_fact:
    docker_compose_version: "{{ docker_compose_version_output.stdout }}"
  when: inventory_hostname == 'server1'
  tags:
    - pre_requisite
    - docker_compose_version

- name: Verify Docker version
  assert:
    that:
      - "docker_version is version('18.06.0', '>=')"
    fail_msg: >-
      Selected docker version: Docker must be upgraded to version 18.06.0 or above
  when: inventory_hostname == 'server1'
  tags:
    - pre_requisite
    - docker_version

- name: Verify Docker Compose version
  assert:
    that:
      - "docker_compose_version is version('1.28.0', '>=')"
    fail_msg: >-
      Selected docker version: docker-compose  must be upgraded to version 1.28.0 or above
  when: inventory_hostname == 'server1'
  tags:
    - pre_requisite
    - docker_compose_version

- name: Install libselinux-python
  block:
  
    - name: Check libselinux-python package Installation
      shell: rpm -q libselinux-python
      register: libselinux_python_version
      ignore_errors: yes
      when:
        - ansible_facts['distribution'] == 'RedHat'

    - name: Copy libselinux-python package
      copy:
        src: "{{ libselinux_python_rpm_source_path }}"
        dest: "{{ libselinux_python_rpm_destination_path }}"
      when: 
        - ansible_facts['distribution'] == 'RedHat'
        - libselinux_python_version.rc != 0

    - name: Install libselinux-python package
      shell: rpm -i "{{ libselinux_python_rpm_destination_path }}"
      when: 
        - ansible_facts['distribution'] == 'RedHat'
        - libselinux_python_version.rc != 0



